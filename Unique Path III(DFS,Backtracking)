C++ code




https://leetcode.com/problems/unique-paths-iii/description/




class Solution {
    int func(int i, int j, int arr1[], int arr2[], vector<vector<int>>& grid, int count,int& m, int& n){
        if(i < 0 || i>=m || j < 0 || j>=n || grid.at(i).at(j) == -1){
            return 0;
        }
        if(grid[i][j]==2){
            if(count == -1)
            return 1;
            return 0;
        }
        int one =0;
        count--;
        grid[i][j]= -1;
        for(int k=0;k<4;k++){
            one += func(i+arr1[k],j+arr2[k],arr1,arr2,grid,count,m,n);
        }
        grid[i][j]=0;
        count++;
        return one;
    }
public:
    int uniquePathsIII(vector<vector<int>>& grid) {
        int count = 0;
        
        int m = grid.size(),n = grid[0].size();
        
        int st1=-1,st2=-1;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==0){
                    count++;
                }
                else if(grid[i][j]==1){
                    st1=i;
                    st2=j;
                }
            }
        }
       int arr1[4] = {1,0,0,-1};
       int arr2[4] = {0,1,-1,0};

        return func(st1,st2,arr1,arr2,grid,count,m,n);
    }
};
