C++ code




https://leetcode.com/problems/path-sum/description/





/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool func(TreeNode* node, int targetSum){
        if(node == NULL){
            return 0;
        }
        if(!node->left && !node->right){
            if(targetSum == node->val){
                return 1;
            }
            return 0;
        }
        int one = 0,two = 0;
        one = func(node->left,targetSum-node->val);
        two = func(node->right,targetSum-node->val);
        if(one == 1){
            return 1;
        }
        else if(two == 1){
            return 1;
        }
        return 0;
    }
public:
    bool hasPathSum(TreeNode* root, int targetSum) {
        
        return func(root,targetSum);
    }
};
